<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Incident Management</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 20px;
    }
    .incident {
      border: 1px solid #ccc;
      margin: 10px 0;
      padding: 10px;
      border-radius: 5px;
    }
    .incident button {
      margin-left: 10px;
    }
  </style>
</head>
<body>
  <h1>Incident Management</h1>
  <form id="incidentForm">
    <input type="text" id="title" placeholder="Title" required />
    <input type="text" id="description" placeholder="Description" required />
    <button type="submit">Add Incident</button>
  </form>

  <h2>Incidents</h2>
  <div id="incidentList"></div>

  <script>
    const API_URL = 'http://localhost:3000/api/incidents';

    // Fetch and display incidents
    async function fetchIncidents() {
      const response = await fetch(API_URL);
      const incidents = await response.json();

      const incidentList = document.getElementById('incidentList');
      incidentList.innerHTML = '';
      incidents.forEach(incident => {
        const div = document.createElement('div');
        div.className = 'incident';
        div.innerHTML = `
          <h3>${incident.title}</h3>
          <p>${incident.description}</p>
          <p>Status: ${incident.status}</p>
          <button onclick="updateStatus(${incident.id}, 'Resolved')">Resolve</button>
          <button onclick="deleteIncident(${incident.id})">Delete</button>
        `;
        incidentList.appendChild(div);
      });
    }

    // Add a new incident
    document.getElementById('incidentForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      const title = document.getElementById('title').value;
      const description = document.getElementById('description').value;

      await fetch(API_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ title, description }),
      });

      document.getElementById('incidentForm').reset();
      fetchIncidents();
    });

    // Update incident status
    async function updateStatus(id, status) {
      await fetch(`${API_URL}/${id}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ status }),
      });
      fetchIncidents();
    }

    // Delete an incident
    async function deleteIncident(id) {
      await fetch(`${API_URL}/${id}`, {
        method: 'DELETE',
      });
      fetchIncidents();
    }

    // Initialize
    fetchIncidents();
  </script>
</body>
</html>
